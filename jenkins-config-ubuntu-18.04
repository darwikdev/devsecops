##Install Java.

#Since Jenkins is a Java application, the first step is to install Java. Update the package index and install the Java 8 OpenJDK package with the following commands:

$ sudo apt update
$ sudo apt install openjdk-8-jdk


#Add the Jenkins Debian repository.


$ wget -q -O - https://pkg.jenkins.io/debian/jenkins.io.key | sudo apt-key add -


#Next, add the Jenkins repository to the system with:

$ sudo sh -c 'echo deb http://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'

#Install Jenkins.

#Once the Jenkins repository is enabled, update the apt package list and install the latest version of Jenkins by typing:

$ sudo apt update
$ sudo apt install jenkins

Jenkins service will automatically start after the installation process is complete. You can verify it by printing the service status:

$ systemctl status jenkins

You should see something similar to this:

● jenkins.service - LSB: Start Jenkins at boot time
Loaded: loaded (/etc/init.d/jenkins; generated)
Active: active (exited) since Wed 2018-08-22 13:03:08 PDT; 2min 16s ago
    Docs: man:systemd-sysv-generator(8)
    Tasks: 0 (limit: 2319)
CGroup: /system.slice/jenkins.service

Adjusting Firewall

If you are installing Jenkins on a remote Ubuntu server that is protected by a firewall you’ll need to open port 8080. Assuming you are using UFW to manage your firewall, you can open the port with the following command:


$ sudo ufw allow 8080
Verify the change with:

$ sudo ufw status
Status: active

To                         Action      From
--                         ------      ----
OpenSSH                    ALLOW       Anywhere
8080                       ALLOW       Anywhere
OpenSSH (v6)               ALLOW       Anywhere (v6)
8080 (v6)                  ALLOW       Anywhere (v6)

#Setting Up Jenkins

#To set up your new Jenkins installation, open your browser, type your domain or IP address followed by port 8080, http://your_ip_or_domain:8080 and screen similar to the following will be displayed:
